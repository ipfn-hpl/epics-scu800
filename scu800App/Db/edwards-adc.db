#######################################################
## vim: sta:et:sw=4:ts=4:sts=4
# ###                                             ### #
# ### EPICS Database for                          ### #
# ### SCU-800 Vacuum Contrller                    ### #
# ###                                             ### #
# ### author: B. Carvalho                         ### #
# ###                                             ### #
# ### Ref 1.0; 2022                               ### #
# ###                                             ### #
# ### macros: BUS     RS232/RS485 BUS name		  ### #
# ### 		  AD      RS485 address of SCU-800    ### #
# ###         CONVST  name of GPIO used as CONVST ### #
# ###         BUSY    name of GPIO used as BUSY   ### #
# ###                                             ### #
# ### Description:                                ### #
# ### This is an example DB file using            ### #
# ### stream(asynI2C) and devgpio to readout an   ### #
# ###                                             ### #
# ### Records ending in "__" are for internal use ### #
# ### only! Do not set them manually              ### #
# ###                                             ### #
#######################################################

#######################################
# ### Read/Write control register ### #
#######################################

################################################
# ### Reads the measured rotational speed  ### #
################################################
record(ai, $(P)$(R)$(A):ReadPressure){
    field(DESC, "Reads the measured Pressure")
    field(DTYP, "stream")
    field(INP, "@edwards-adc.proto readPressure($(A)) $(BUS)")
    field(VAL, "22")
    field(SCAN, "2 second")
    field(FLNK, "$(P)$(R)$(A):GaugeVersion")
}
record(ai, $(P)$(R)$(A):GaugeVersion){
    field(DESC, "Reads the Gauge Model")
    field(DTYP, "stream")
    field(INP, "@edwards-adc.proto gaugeVersion($(A)) $(BUS)")
    field(VAL, "22")
    #field(FLNK, "$(P)$(R)$(A):Units MSS")
    #field(SCAN, "10 second")
}
record(mbbi, $(P)$(R)$(A):Units){
    field(DESC, "Reads the Units")
    field(DTYP, "stream" )
    field(INP, "@edwards-adc.proto getUnits $(BUS)")
    field(VAL, "0")
    field(ZRVL,"0")
    field(ZRST,"Volt")
    field(ONVL,"1")
    field(ONST,"mBar")
    field(TWVL,"2")
    field(TWST,"Pascal")
    field(THVL,"3")
    field(THST,"Torr")
    #field(SCAN, "2 second")
}
record(mbbo, $(P)$(R)$(A):On1){
    field(DESC, "Reads the Units")
    field(DTYP, "stream" )
    field(OUT, "@edwards-adc.proto onChannel($(A)) $(BUS)")
    field(VAL, "0")
    field(ZRVL,"0")
    field(ZRST,"OFF")
    field(ONVL,"1")
    field(ONST,"On")
    #field(SCAN, "2 second")
}

record(stringout, $(P)$(A):generic){
    field(DESC, "Generic")
    field(DTYP, "stream")
    field(OUT, "@edwards.proto debug $(BUS)")
#    field(PINI, "YES")
}
