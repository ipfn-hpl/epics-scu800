Terminator   = "";
#LockTimeout  = 500;
ReplyTimeout = 200;
ReadTimeout  = 100;
WriteTimeout = 100;
MaxInput     = 170;
ExtraInput   = Error;
#ExtraInput   = Ignore;

wCtrl {
  out ${1} 2 "%.2r";
}

rCtrl {
  out ${1} 2;
  in  "%02r";
}

rConv {
  out ${1} 0;
  in  "%02r";
}
## e.g Command("01") {
Command {
    out "@\$1",STX,"001 E%02X",ETX,"%3<xor8ff>";
    in ACK,$1,STX,"001#",ETX,"%6<xor8ff>";
    out ACK,$1;
}
#out "@",$1,STX,"001?h",ETX,"%3<xor8ff>";
ReadSpeedSetPoint{
    out "@",$1,STX,"001?h",ETX,"%3<xor8ff>";
    in  ACK,$1,"@",$1,STX,"001 h%!4X",ETX,"%6<xor8ff>";
    out ACK,$1;
}
# e.g SetSpeedSetPoint("01") {
#NOK    @init {ReadSpeedSetPoint($1); }
SetSpeedSetPoint {
    out "@",$1,STX,"001 h%04X",ETX,"%3<xor8ff>";
    in ACK,$1,"@",$1,STX,"001#",ETX,"%6<xor8ff>";
    out ACK,$1;
}
SetSpeedSetPointSingle {
    out "@\$1",STX,"001 h%04X",ETX,"%<xor8ff>";
    in ACK,$1,STX,"001#",ETX,"%3<xor8ff>";
    out ACK,$1;
}
ReadSpeedSetPointSingle{
    out STX,"001?h",ETX,"%<xor8ff>";
    in ACK,STX,"001 h%!4X",ETX,"%1<xor8ff>";
    out ACK;
}
#    out STX,"001 h%04X",ETX,"%<xor8ff>";
ReadSetPointSingle {
    out STX,"001?d",ETX,"%<xor8ff>";
    in ACK,STX,"001 d%4X%*4X",ETX,"%1<xor8ff>";
    out ACK;
}
#ReadSetpoint: No reply within 200 ms to "@<01><02>001?d<03><96>"
ReadSetPoint {
    out "@",$1,STX,"001?d",ETX,"%3<xor8ff>";
    in ACK,$1,"@",$1,STX,"001 d%4X%*4X",ETX,"%6<xor8ff>";
    out ACK,$1;
}
ReadMotorTempSingle {
    out STX,"001?e",ETX,"%<xor8ff>";
    in ACK,STX,"001 e%!4X",ETX,"%1<xor8ff>";
    out ACK;
}
#    out "@","01",STX,"001?e",ETX,"%<xor8ff>";
ReadMotorTemp {
    out        "@",$1,STX,"001?e",ETX,"%3<xor8ff>";
    in  ACK,$1,"@",$1,STX,"001 e%!4X",ETX,"%6<xor8ff>";
    out ACK,$1;
}
ReadStatus {
    out        "@",$1,STX,"001?f",ETX,"%3<xor8ff>";
    in  ACK,$1,"@",$1,STX,"001 f%!8X",ETX,"%6<xor8ff>";
    out ACK,$1;
}

#readmeas{
#    out STX,'001?D',ETX,"%<xor8ff>";
#    in ACK,STX,"001 D%*15s%4X",ETX,"%1<xor8ff>";
#    out "\x06";
#}

#    in ACK,STX,"001 D%!4X",ETX,"%<xor8ff>"
#    in ACK,STX,"001 D%*14X%4X",ETX,"%1<xor8ff>";
# OK:
# in ACK,STX,"001 D%*15s%4X",ETX,"%1<xor8ff>";
ReadMeasSingle {
    out STX,"001?D",ETX,"%<xor8ff>";
    in ACK,STX,"001 D%*14X%4X",ETX,"%1<xor8ff>";
    out ACK;
}
ReadMeas {
    out "@",$1,STX,"001?D",ETX,"%3<xor8ff>";
    in  ACK,$1,"@",$1,STX,"001 D%*14X%!4X",ETX,"%6<xor8ff>";
    out ACK,$1;
}
ReadModFonct {
    ExtraInput = Ignore;
    out        "@",$1,STX,"001?M",ETX,"%3<xor8ff>";
    in  ACK,$1,"@",$1,STX,"001 M%!2X%*154X",ETX,"%6<xor8ff>";
    out ACK,$1;
}
ReadModFonctNErrors {
    ExtraInput = Ignore;
    in  ACK,$1,"@",$1,STX,"001 M%*!2X%!2X%*152X",ETX,"%6<xor8ff>";
}
ReadModFonctError1 {
#    ExtraInput = Ignore;
    in  ACK,$1,"@",$1,STX,"001 M%*!4X%!2X%*150X",ETX,"%6<xor8ff>";
}
ReadModFonctError2 {
    in  ACK,$1,"@",$1,STX,"001 M%*!6X%!2X%*148X",ETX,"%6<xor8ff>";
}
ReadModFonctWWarning {
    ExtraInput = Ignore;
    out        "@",$1,STX,"001?m",ETX,"%3<xor8ff>";
    in  ACK,$1,"@",$1,STX,"001 m%!2X%*154X",ETX,"%6<xor8ff>";
    out ACK,$1;
}
ReadWarning {
    ExtraInput = Ignore;
    in  ACK,$1,"@",$1,STX,"001 m%*!2X%!4X%*148X",ETX,"%6<xor8ff>";
}
ReadModFonctWWarningNErrors {
    ExtraInput = Ignore;
    in  ACK,$1,"@",$1,STX,"001 m%*!6X%!2X%*146X",ETX,"%6<xor8ff>";
}
# Connect a stringout record to this to get
# a generic command interface.
# After processing finishes, the record contains the reply.

debug {
    ExtraInput = Ignore;
    out "%s"; in "%60c"
}


